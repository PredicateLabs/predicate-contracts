{"abi":[{"type":"function","name":"addShares","inputs":[{"name":"staker","type":"address","internalType":"address"},{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addStrategiesToDepositWhitelist","inputs":[{"name":"strategiesToWhitelist","type":"address[]","internalType":"contract IStrategy[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"calculateWithdrawalRoot","inputs":[{"name":"queuedWithdrawal","type":"tuple","internalType":"struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal","components":[{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"shares","type":"uint256[]","internalType":"uint256[]"},{"name":"staker","type":"address","internalType":"address"},{"name":"withdrawerAndNonce","type":"tuple","internalType":"struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce","components":[{"name":"withdrawer","type":"address","internalType":"address"},{"name":"nonce","type":"uint96","internalType":"uint96"}]},{"name":"withdrawalStartBlock","type":"uint32","internalType":"uint32"},{"name":"delegatedAddress","type":"address","internalType":"address"}]}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"delegation","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IDelegationManager"}],"stateMutability":"view"},{"type":"function","name":"depositIntoStrategy","inputs":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"depositIntoStrategyWithSignature","inputs":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"staker","type":"address","internalType":"address"},{"name":"expiry","type":"uint256","internalType":"uint256"},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"eigenPodManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IEigenPodManager"}],"stateMutability":"view"},{"type":"function","name":"getDeposits","inputs":[{"name":"staker","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address[]","internalType":"contract IStrategy[]"},{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"migrateQueuedWithdrawal","inputs":[{"name":"queuedWithdrawal","type":"tuple","internalType":"struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal","components":[{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"shares","type":"uint256[]","internalType":"uint256[]"},{"name":"staker","type":"address","internalType":"address"},{"name":"withdrawerAndNonce","type":"tuple","internalType":"struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce","components":[{"name":"withdrawer","type":"address","internalType":"address"},{"name":"nonce","type":"uint96","internalType":"uint96"}]},{"name":"withdrawalStartBlock","type":"uint32","internalType":"uint32"},{"name":"delegatedAddress","type":"address","internalType":"address"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"},{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeShares","inputs":[{"name":"staker","type":"address","internalType":"address"},{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeStrategiesFromDepositWhitelist","inputs":[{"name":"strategiesToRemoveFromWhitelist","type":"address[]","internalType":"contract IStrategy[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"slasher","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract ISlasher"}],"stateMutability":"view"},{"type":"function","name":"stakerStrategyListLength","inputs":[{"name":"staker","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"stakerStrategyShares","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"strategy","type":"address","internalType":"contract IStrategy"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"strategyWhitelister","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"withdrawSharesAsTokens","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"token","type":"address","internalType":"contract IERC20"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Deposit","inputs":[{"name":"staker","type":"address","indexed":false,"internalType":"address"},{"name":"token","type":"address","indexed":false,"internalType":"contract IERC20"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"},{"name":"shares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"StrategyAddedToDepositWhitelist","inputs":[{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"}],"anonymous":false},{"type":"event","name":"StrategyRemovedFromDepositWhitelist","inputs":[{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"}],"anonymous":false},{"type":"event","name":"StrategyWhitelisterChanged","inputs":[{"name":"previousAddress","type":"address","indexed":false,"internalType":"address"},{"name":"newAddress","type":"address","indexed":false,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addShares(address,address,uint256)":"50ff7225","addStrategiesToDepositWhitelist(address[])":"5de08ff2","calculateWithdrawalRoot((address[],uint256[],address,(address,uint96),uint32,address))":"b43b514b","delegation()":"df5cf723","depositIntoStrategy(address,address,uint256)":"e7a050aa","depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)":"32e89ace","eigenPodManager()":"4665bcda","getDeposits(address)":"94f649dd","migrateQueuedWithdrawal((address[],uint256[],address,(address,uint96),uint32,address))":"cd293f6f","removeShares(address,address,uint256)":"8c80d4e5","removeStrategiesFromDepositWhitelist(address[])":"b5d8b5b8","slasher()":"b1344271","stakerStrategyListLength(address)":"8b8aac3c","stakerStrategyShares(address,address)":"7a7e0d92","strategyWhitelister()":"967fc0d2","withdrawSharesAsTokens(address,address,uint256,address)":"c608c7f3"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyAddedToDepositWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromDepositWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"StrategyWhitelisterChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"addShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategiesToWhitelist\",\"type\":\"address[]\"}],\"name\":\"addStrategiesToDepositWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"}],\"internalType\":\"struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce\",\"name\":\"withdrawerAndNonce\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"withdrawalStartBlock\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"delegatedAddress\",\"type\":\"address\"}],\"internalType\":\"struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal\",\"name\":\"queuedWithdrawal\",\"type\":\"tuple\"}],\"name\":\"calculateWithdrawalRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositIntoStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"depositIntoStrategyWithSignature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eigenPodManager\",\"outputs\":[{\"internalType\":\"contract IEigenPodManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getDeposits\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"}],\"internalType\":\"struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce\",\"name\":\"withdrawerAndNonce\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"withdrawalStartBlock\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"delegatedAddress\",\"type\":\"address\"}],\"internalType\":\"struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal\",\"name\":\"queuedWithdrawal\",\"type\":\"tuple\"}],\"name\":\"migrateQueuedWithdrawal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"removeShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategiesToRemoveFromWhitelist\",\"type\":\"address[]\"}],\"name\":\"removeStrategiesFromDepositWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slasher\",\"outputs\":[{\"internalType\":\"contract ISlasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"stakerStrategyListLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"stakerStrategyShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyWhitelister\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawSharesAsTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"events\":{\"Deposit(address,address,address,uint256)\":{\"params\":{\"shares\":\"Is the number of new shares `staker` has been granted in `strategy`.\",\"staker\":\"Is the staker who is depositing funds into EigenLayer.\",\"strategy\":\"Is the strategy that `staker` has deposited into.\",\"token\":\"Is the token that `staker` deposited.\"}}},\"kind\":\"dev\",\"methods\":{\"addStrategiesToDepositWhitelist(address[])\":{\"params\":{\"strategiesToWhitelist\":\"Strategies that will be added to the `strategyIsWhitelistedForDeposit` mapping (if they aren't in it already)\"}},\"depositIntoStrategy(address,address,uint256)\":{\"details\":\"The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.Cannot be called by an address that is 'frozen' (this function will revert if the `msg.sender` is frozen). WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors          where the token balance and corresponding strategy shares are not in sync upon reentrancy.\",\"params\":{\"amount\":\"is the amount of token to be deposited in the strategy by the staker\",\"strategy\":\"is the specified strategy where deposit is to be made,\",\"token\":\"is the denomination in which the deposit is to be made,\"},\"returns\":{\"shares\":\"The amount of new shares in the `strategy` created as part of the action.\"}},\"depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)\":{\"details\":\"The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.A signature is required for this function to eliminate the possibility of griefing attacks, specifically those targeting stakers who may be attempting to undelegate.Cannot be called on behalf of a staker that is 'frozen' (this function will revert if the `staker` is frozen).  WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors          where the token balance and corresponding strategy shares are not in sync upon reentrancy\",\"params\":{\"amount\":\"is the amount of token to be deposited in the strategy by the staker\",\"expiry\":\"the timestamp at which the signature expires\",\"signature\":\"is a valid signature from the `staker`. either an ECDSA signature if the `staker` is an EOA, or data to forward following EIP-1271 if the `staker` is a contract\",\"staker\":\"the staker that the deposited assets will be credited to\",\"strategy\":\"is the specified strategy where deposit is to be made,\",\"token\":\"is the denomination in which the deposit is to be made,\"},\"returns\":{\"shares\":\"The amount of new shares in the `strategy` created as part of the action.\"}},\"getDeposits(address)\":{\"returns\":{\"_0\":\"(staker's strategies, shares in these strategies)\"}},\"removeStrategiesFromDepositWhitelist(address[])\":{\"params\":{\"strategiesToRemoveFromWhitelist\":\"Strategies that will be removed to the `strategyIsWhitelistedForDeposit` mapping (if they are in it)\"}}},\"title\":\"Interface for the primary entrypoint for funds into EigenLayer.\",\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,address,address,uint256)\":{\"notice\":\"Emitted when a new deposit occurs on behalf of `staker`.\"},\"StrategyAddedToDepositWhitelist(address)\":{\"notice\":\"Emitted when a strategy is added to the approved list of strategies for deposit\"},\"StrategyRemovedFromDepositWhitelist(address)\":{\"notice\":\"Emitted when a strategy is removed from the approved list of strategies for deposit\"},\"StrategyWhitelisterChanged(address,address)\":{\"notice\":\"Emitted when the `strategyWhitelister` is changed\"}},\"kind\":\"user\",\"methods\":{\"addShares(address,address,uint256)\":{\"notice\":\"Used by the DelegationManager to award a Staker some shares that have passed through the withdrawal queue\"},\"addStrategiesToDepositWhitelist(address[])\":{\"notice\":\"Owner-only function that adds the provided Strategies to the 'whitelist' of strategies that stakers can deposit into\"},\"delegation()\":{\"notice\":\"Returns the single, central Delegation contract of EigenLayer\"},\"depositIntoStrategy(address,address,uint256)\":{\"notice\":\"Deposits `amount` of `token` into the specified `strategy`, with the resultant shares credited to `msg.sender`\"},\"depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)\":{\"notice\":\"Used for depositing an asset into the specified strategy with the resultant shares credited to `staker`, who must sign off on the action. Note that the assets are transferred out/from the `msg.sender`, not from the `staker`; this function is explicitly designed purely to help one address deposit 'for' another.\"},\"eigenPodManager()\":{\"notice\":\"Returns the EigenPodManager contract of EigenLayer\"},\"getDeposits(address)\":{\"notice\":\"Get all details on the staker's deposits and corresponding shares\"},\"removeShares(address,address,uint256)\":{\"notice\":\"Used by the DelegationManager to remove a Staker's shares from a particular strategy when entering the withdrawal queue\"},\"removeStrategiesFromDepositWhitelist(address[])\":{\"notice\":\"Owner-only function that removes the provided Strategies from the 'whitelist' of strategies that stakers can deposit into\"},\"slasher()\":{\"notice\":\"Returns the single, central Slasher contract of EigenLayer\"},\"stakerStrategyListLength(address)\":{\"notice\":\"Simple getter function that returns `stakerStrategyList[staker].length`.\"},\"stakerStrategyShares(address,address)\":{\"notice\":\"Returns the current shares of `user` in `strategy`\"},\"strategyWhitelister()\":{\"notice\":\"Returns the address of the `strategyWhitelister`\"},\"withdrawSharesAsTokens(address,address,uint256,address)\":{\"notice\":\"Used by the DelegationManager to convert withdrawn shares to tokens and send them to a recipient\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceSee the `StrategyManager` contract itself for implementation details.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/helpers/eigenlayer/interfaces/IStrategyManager.sol\":\"IStrategyManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin-upgrades/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":@openzeppelin/=lib/eigenlayer-contracts/lib/openzeppelin-contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":utils/=lib/utils/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"test/helpers/eigenlayer/BeaconChainProofs.sol\":{\"keccak256\":\"0xf05a78216a836b25929b5d83bf8419e98bcbf5860507f377007695ccc1712901\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6d7aba6075ba5709b7e63cd5589aa6a73f9f0423d2eb6f1ec15d1dcc680548e7\",\"dweb:/ipfs/Qma24o2iXX6syXfLuAjVkWWgefiNE7Yp1kspX3Xwnvbch5\"]},\"test/helpers/eigenlayer/Endian.sol\":{\"keccak256\":\"0x6dbe2e979af6e1fb094755cf42f6cc9c5ef01eb90e4d951e812229dcd6a7ffb6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://abbc4dc3619eb89707fbc94ab01dd91a494689194055cbd4003ec2e6401ca198\",\"dweb:/ipfs/QmNo3etJWCMwudBAPaz34SY7wZfZsrYR95JBaZb39MJAAd\"]},\"test/helpers/eigenlayer/Merkle.sol\":{\"keccak256\":\"0x117f00cae811378b255c219a7c902e9a10503a816606fc27f6ff1cc7ffd27f1c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1e50fd6a7b7ba2cc72e5fce87b95303f9580bee657e047550be2ca2f97736d31\",\"dweb:/ipfs/QmTaFxcrjgLCay4GpwwbX1kM4bYVkBVFSh3anqUUvZn1Cv\"]},\"test/helpers/eigenlayer/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x258ab23ca29cb45c0e891a30b09dd1d89f03d6cf0484802d38b495aac13ce7bd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6b3fa2653e7b4d44aa5647cbc91fa9fa0b9bedc1de2e010e32168c0ee9b7d12e\",\"dweb:/ipfs/QmRuaa9qyA37csx3y57L5fgnK11X5f9qCpu5xf9P4dRdA1\"]},\"test/helpers/eigenlayer/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x611ae699cdb3199d420a04b612eb019942d81d618991cd6d520c1326e552638d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f709f0bd0b303e96296a53eb8abbc4633083baf6a67e896d4a5e83586b5ab5fb\",\"dweb:/ipfs/QmRtKrYHSZjHwTWXu14h5T5xJYbtGYZEwndTa8GifaAwHc\"]},\"test/helpers/eigenlayer/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0xde627552b5826d48aa533eb916809e71f5dde7d5e45e6776a5a0740551a32547\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://d6ab110f680cd6296e31cbb453e416882e7ac421587799629048f90dbe22a190\",\"dweb:/ipfs/QmQTHQ6SYbPZjDiDtPWya7oi9ERXhXF9uQVqip7HvvQ7Gr\"]},\"test/helpers/eigenlayer/interfaces/IEigenPod.sol\":{\"keccak256\":\"0x42e4664a40396f13b537324f2e2a9dde033d1b9ba2dfc011aa71c903fd84ee97\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f5b0abfdeed0c49d161ba1369c5f9cc763cc69b3ff106700c477e535cce4eb41\",\"dweb:/ipfs/QmPTUJr1DgWJGaHT5aMCMcLuA6G68Kf7GjtaiEgBaHjXU8\"]},\"test/helpers/eigenlayer/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x79775853f121e1b9456c7b650967952dbecd46645d857151697cb81e47103a91\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ca2c2114558ab5143199155141f68f7126d0eec0c019e9e12fce69e519dbfc5f\",\"dweb:/ipfs/QmTb1EaKMdZuAaFL91krPTpoJTJrZLe5srEjCo7VpVDVPe\"]},\"test/helpers/eigenlayer/interfaces/IPausable.sol\":{\"keccak256\":\"0xefa2e2047d933621c8dd03ee9c455327c7af88734edad656118ce5483be7c373\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eda7b62bf881c164ff3bb084864d79e57fb11eda277b7c77c71892e7baac5939\",\"dweb:/ipfs/QmccvX3CcwkWVZ3soxaQuJXAMWrTTQDCr8PYVKF5URewfX\"]},\"test/helpers/eigenlayer/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xaead18fc1e33367e81247f38ca9abcfcc09ddb2d3389d4d00a66a6160cdfd131\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3425b1f671546026cabae697c16d16bc784e11531fce1a8101210a49851f91fe\",\"dweb:/ipfs/QmawvHjU9M1u9C1cHPewYqNAiNJhcXwstXhPXa1ZS1NoMc\"]},\"test/helpers/eigenlayer/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x141b9e361a6c8490c4cdf6c993fd84ec0c93fe10e832ef5d030f164c28f950cf\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://303ed39f34f08f3f680c80c824ab39af4fd64d1b6e1e991c94de195b865b874c\",\"dweb:/ipfs/QmX4fxjM6LBKn5caCB3DfQyUR2Lm6ySErAZfKcuFzFpyvk\"]},\"test/helpers/eigenlayer/interfaces/ISlasher.sol\":{\"keccak256\":\"0x7652d38bfed3043c8cf9e8c4efa0d386147eeb8e4dc40f58369f637d7315197c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1da335cfeeac90b7698b5171e5a6501708421516e7824ef892fe6b48bc37289a\",\"dweb:/ipfs/Qmf8bEcETRypb1ND3NPgwVfsTJSYaeDm3BuRyVCXvq53U8\"]},\"test/helpers/eigenlayer/interfaces/IStrategy.sol\":{\"keccak256\":\"0x004a06224ff195a7d48729b60b1657cd7eb1b288b568d5597bdd2c1ef96b0146\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://283fdb7aac0cf2a4b8b08512801b13b2301e2ce86c1c85f4be4f9789a38e5316\",\"dweb:/ipfs/QmTnNYw65pPadEXNVVX53bPYd8F9GZ4HkmKuVHxMnufDhT\"]},\"test/helpers/eigenlayer/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0x058ec8e8ded58d19f4ffece0c05daac83b91ab8c102ffa47bae7477f3c999aa6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://41c1e4fc0e62f292d0260b9c45cae1975f232458f2ea2fa84a1f239764aa9c06\",\"dweb:/ipfs/QmPY2Z7Krecyv4u7XabWUg6Dhs9FeigMP6wceX9x5Rjx9s\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.12+commit.f00d7308"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"staker","type":"address","indexed":false},{"internalType":"contract IERC20","name":"token","type":"address","indexed":false},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false},{"internalType":"uint256","name":"shares","type":"uint256","indexed":false}],"type":"event","name":"Deposit","anonymous":false},{"inputs":[{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false}],"type":"event","name":"StrategyAddedToDepositWhitelist","anonymous":false},{"inputs":[{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false}],"type":"event","name":"StrategyRemovedFromDepositWhitelist","anonymous":false},{"inputs":[{"internalType":"address","name":"previousAddress","type":"address","indexed":false},{"internalType":"address","name":"newAddress","type":"address","indexed":false}],"type":"event","name":"StrategyWhitelisterChanged","anonymous":false},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"addShares"},{"inputs":[{"internalType":"contract IStrategy[]","name":"strategiesToWhitelist","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"addStrategiesToDepositWhitelist"},{"inputs":[{"internalType":"struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal","name":"queuedWithdrawal","type":"tuple","components":[{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"shares","type":"uint256[]"},{"internalType":"address","name":"staker","type":"address"},{"internalType":"struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce","name":"withdrawerAndNonce","type":"tuple","components":[{"internalType":"address","name":"withdrawer","type":"address"},{"internalType":"uint96","name":"nonce","type":"uint96"}]},{"internalType":"uint32","name":"withdrawalStartBlock","type":"uint32"},{"internalType":"address","name":"delegatedAddress","type":"address"}]}],"stateMutability":"pure","type":"function","name":"calculateWithdrawalRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"delegation","outputs":[{"internalType":"contract IDelegationManager","name":"","type":"address"}]},{"inputs":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"depositIntoStrategy","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}]},{"inputs":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"staker","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"depositIntoStrategyWithSignature","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"eigenPodManager","outputs":[{"internalType":"contract IEigenPodManager","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"stateMutability":"view","type":"function","name":"getDeposits","outputs":[{"internalType":"contract IStrategy[]","name":"","type":"address[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal","name":"queuedWithdrawal","type":"tuple","components":[{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"shares","type":"uint256[]"},{"internalType":"address","name":"staker","type":"address"},{"internalType":"struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce","name":"withdrawerAndNonce","type":"tuple","components":[{"internalType":"address","name":"withdrawer","type":"address"},{"internalType":"uint96","name":"nonce","type":"uint96"}]},{"internalType":"uint32","name":"withdrawalStartBlock","type":"uint32"},{"internalType":"address","name":"delegatedAddress","type":"address"}]}],"stateMutability":"nonpayable","type":"function","name":"migrateQueuedWithdrawal","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"removeShares"},{"inputs":[{"internalType":"contract IStrategy[]","name":"strategiesToRemoveFromWhitelist","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"removeStrategiesFromDepositWhitelist"},{"inputs":[],"stateMutability":"view","type":"function","name":"slasher","outputs":[{"internalType":"contract ISlasher","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"stateMutability":"view","type":"function","name":"stakerStrategyListLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"contract IStrategy","name":"strategy","type":"address"}],"stateMutability":"view","type":"function","name":"stakerStrategyShares","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"strategyWhitelister","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"contract IERC20","name":"token","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"withdrawSharesAsTokens"}],"devdoc":{"kind":"dev","methods":{"addStrategiesToDepositWhitelist(address[])":{"params":{"strategiesToWhitelist":"Strategies that will be added to the `strategyIsWhitelistedForDeposit` mapping (if they aren't in it already)"}},"depositIntoStrategy(address,address,uint256)":{"details":"The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.Cannot be called by an address that is 'frozen' (this function will revert if the `msg.sender` is frozen). WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors          where the token balance and corresponding strategy shares are not in sync upon reentrancy.","params":{"amount":"is the amount of token to be deposited in the strategy by the staker","strategy":"is the specified strategy where deposit is to be made,","token":"is the denomination in which the deposit is to be made,"},"returns":{"shares":"The amount of new shares in the `strategy` created as part of the action."}},"depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)":{"details":"The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.A signature is required for this function to eliminate the possibility of griefing attacks, specifically those targeting stakers who may be attempting to undelegate.Cannot be called on behalf of a staker that is 'frozen' (this function will revert if the `staker` is frozen).  WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors          where the token balance and corresponding strategy shares are not in sync upon reentrancy","params":{"amount":"is the amount of token to be deposited in the strategy by the staker","expiry":"the timestamp at which the signature expires","signature":"is a valid signature from the `staker`. either an ECDSA signature if the `staker` is an EOA, or data to forward following EIP-1271 if the `staker` is a contract","staker":"the staker that the deposited assets will be credited to","strategy":"is the specified strategy where deposit is to be made,","token":"is the denomination in which the deposit is to be made,"},"returns":{"shares":"The amount of new shares in the `strategy` created as part of the action."}},"getDeposits(address)":{"returns":{"_0":"(staker's strategies, shares in these strategies)"}},"removeStrategiesFromDepositWhitelist(address[])":{"params":{"strategiesToRemoveFromWhitelist":"Strategies that will be removed to the `strategyIsWhitelistedForDeposit` mapping (if they are in it)"}}},"version":1},"userdoc":{"kind":"user","methods":{"addShares(address,address,uint256)":{"notice":"Used by the DelegationManager to award a Staker some shares that have passed through the withdrawal queue"},"addStrategiesToDepositWhitelist(address[])":{"notice":"Owner-only function that adds the provided Strategies to the 'whitelist' of strategies that stakers can deposit into"},"delegation()":{"notice":"Returns the single, central Delegation contract of EigenLayer"},"depositIntoStrategy(address,address,uint256)":{"notice":"Deposits `amount` of `token` into the specified `strategy`, with the resultant shares credited to `msg.sender`"},"depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)":{"notice":"Used for depositing an asset into the specified strategy with the resultant shares credited to `staker`, who must sign off on the action. Note that the assets are transferred out/from the `msg.sender`, not from the `staker`; this function is explicitly designed purely to help one address deposit 'for' another."},"eigenPodManager()":{"notice":"Returns the EigenPodManager contract of EigenLayer"},"getDeposits(address)":{"notice":"Get all details on the staker's deposits and corresponding shares"},"removeShares(address,address,uint256)":{"notice":"Used by the DelegationManager to remove a Staker's shares from a particular strategy when entering the withdrawal queue"},"removeStrategiesFromDepositWhitelist(address[])":{"notice":"Owner-only function that removes the provided Strategies from the 'whitelist' of strategies that stakers can deposit into"},"slasher()":{"notice":"Returns the single, central Slasher contract of EigenLayer"},"stakerStrategyListLength(address)":{"notice":"Simple getter function that returns `stakerStrategyList[staker].length`."},"stakerStrategyShares(address,address)":{"notice":"Returns the current shares of `user` in `strategy`"},"strategyWhitelister()":{"notice":"Returns the address of the `strategyWhitelister`"},"withdrawSharesAsTokens(address,address,uint256,address)":{"notice":"Used by the DelegationManager to convert withdrawn shares to tokens and send them to a recipient"}},"version":1}},"settings":{"remappings":["@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","@openzeppelin-upgrades/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/","@openzeppelin-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","@openzeppelin/=lib/eigenlayer-contracts/lib/openzeppelin-contracts/","@uniswap/v3-core/=lib/v3-core/","@uniswap/v3-periphery/=lib/v3-periphery/","ds-test/=lib/forge-std/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","solmate/=lib/solmate/src/","utils/=lib/utils/","v3-core/=lib/v3-core/contracts/","v3-periphery/=lib/v3-periphery/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"test/helpers/eigenlayer/interfaces/IStrategyManager.sol":"IStrategyManager"},"evmVersion":"london","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61","urls":["bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354","dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b","urls":["bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34","dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"],"license":"MIT"},"test/helpers/eigenlayer/BeaconChainProofs.sol":{"keccak256":"0xf05a78216a836b25929b5d83bf8419e98bcbf5860507f377007695ccc1712901","urls":["bzz-raw://6d7aba6075ba5709b7e63cd5589aa6a73f9f0423d2eb6f1ec15d1dcc680548e7","dweb:/ipfs/Qma24o2iXX6syXfLuAjVkWWgefiNE7Yp1kspX3Xwnvbch5"],"license":"BUSL-1.1"},"test/helpers/eigenlayer/Endian.sol":{"keccak256":"0x6dbe2e979af6e1fb094755cf42f6cc9c5ef01eb90e4d951e812229dcd6a7ffb6","urls":["bzz-raw://abbc4dc3619eb89707fbc94ab01dd91a494689194055cbd4003ec2e6401ca198","dweb:/ipfs/QmNo3etJWCMwudBAPaz34SY7wZfZsrYR95JBaZb39MJAAd"],"license":"BUSL-1.1"},"test/helpers/eigenlayer/Merkle.sol":{"keccak256":"0x117f00cae811378b255c219a7c902e9a10503a816606fc27f6ff1cc7ffd27f1c","urls":["bzz-raw://1e50fd6a7b7ba2cc72e5fce87b95303f9580bee657e047550be2ca2f97736d31","dweb:/ipfs/QmTaFxcrjgLCay4GpwwbX1kM4bYVkBVFSh3anqUUvZn1Cv"],"license":"BUSL-1.1"},"test/helpers/eigenlayer/interfaces/IBeaconChainOracle.sol":{"keccak256":"0x258ab23ca29cb45c0e891a30b09dd1d89f03d6cf0484802d38b495aac13ce7bd","urls":["bzz-raw://6b3fa2653e7b4d44aa5647cbc91fa9fa0b9bedc1de2e010e32168c0ee9b7d12e","dweb:/ipfs/QmRuaa9qyA37csx3y57L5fgnK11X5f9qCpu5xf9P4dRdA1"],"license":"BUSL-1.1"},"test/helpers/eigenlayer/interfaces/IDelegationManager.sol":{"keccak256":"0x611ae699cdb3199d420a04b612eb019942d81d618991cd6d520c1326e552638d","urls":["bzz-raw://f709f0bd0b303e96296a53eb8abbc4633083baf6a67e896d4a5e83586b5ab5fb","dweb:/ipfs/QmRtKrYHSZjHwTWXu14h5T5xJYbtGYZEwndTa8GifaAwHc"],"license":"BUSL-1.1"},"test/helpers/eigenlayer/interfaces/IETHPOSDeposit.sol":{"keccak256":"0xde627552b5826d48aa533eb916809e71f5dde7d5e45e6776a5a0740551a32547","urls":["bzz-raw://d6ab110f680cd6296e31cbb453e416882e7ac421587799629048f90dbe22a190","dweb:/ipfs/QmQTHQ6SYbPZjDiDtPWya7oi9ERXhXF9uQVqip7HvvQ7Gr"],"license":"CC0-1.0"},"test/helpers/eigenlayer/interfaces/IEigenPod.sol":{"keccak256":"0x42e4664a40396f13b537324f2e2a9dde033d1b9ba2dfc011aa71c903fd84ee97","urls":["bzz-raw://f5b0abfdeed0c49d161ba1369c5f9cc763cc69b3ff106700c477e535cce4eb41","dweb:/ipfs/QmPTUJr1DgWJGaHT5aMCMcLuA6G68Kf7GjtaiEgBaHjXU8"],"license":"BUSL-1.1"},"test/helpers/eigenlayer/interfaces/IEigenPodManager.sol":{"keccak256":"0x79775853f121e1b9456c7b650967952dbecd46645d857151697cb81e47103a91","urls":["bzz-raw://ca2c2114558ab5143199155141f68f7126d0eec0c019e9e12fce69e519dbfc5f","dweb:/ipfs/QmTb1EaKMdZuAaFL91krPTpoJTJrZLe5srEjCo7VpVDVPe"],"license":"BUSL-1.1"},"test/helpers/eigenlayer/interfaces/IPausable.sol":{"keccak256":"0xefa2e2047d933621c8dd03ee9c455327c7af88734edad656118ce5483be7c373","urls":["bzz-raw://eda7b62bf881c164ff3bb084864d79e57fb11eda277b7c77c71892e7baac5939","dweb:/ipfs/QmccvX3CcwkWVZ3soxaQuJXAMWrTTQDCr8PYVKF5URewfX"],"license":"BUSL-1.1"},"test/helpers/eigenlayer/interfaces/IPauserRegistry.sol":{"keccak256":"0xaead18fc1e33367e81247f38ca9abcfcc09ddb2d3389d4d00a66a6160cdfd131","urls":["bzz-raw://3425b1f671546026cabae697c16d16bc784e11531fce1a8101210a49851f91fe","dweb:/ipfs/QmawvHjU9M1u9C1cHPewYqNAiNJhcXwstXhPXa1ZS1NoMc"],"license":"BUSL-1.1"},"test/helpers/eigenlayer/interfaces/ISignatureUtils.sol":{"keccak256":"0x141b9e361a6c8490c4cdf6c993fd84ec0c93fe10e832ef5d030f164c28f950cf","urls":["bzz-raw://303ed39f34f08f3f680c80c824ab39af4fd64d1b6e1e991c94de195b865b874c","dweb:/ipfs/QmX4fxjM6LBKn5caCB3DfQyUR2Lm6ySErAZfKcuFzFpyvk"],"license":"BUSL-1.1"},"test/helpers/eigenlayer/interfaces/ISlasher.sol":{"keccak256":"0x7652d38bfed3043c8cf9e8c4efa0d386147eeb8e4dc40f58369f637d7315197c","urls":["bzz-raw://1da335cfeeac90b7698b5171e5a6501708421516e7824ef892fe6b48bc37289a","dweb:/ipfs/Qmf8bEcETRypb1ND3NPgwVfsTJSYaeDm3BuRyVCXvq53U8"],"license":"BUSL-1.1"},"test/helpers/eigenlayer/interfaces/IStrategy.sol":{"keccak256":"0x004a06224ff195a7d48729b60b1657cd7eb1b288b568d5597bdd2c1ef96b0146","urls":["bzz-raw://283fdb7aac0cf2a4b8b08512801b13b2301e2ce86c1c85f4be4f9789a38e5316","dweb:/ipfs/QmTnNYw65pPadEXNVVX53bPYd8F9GZ4HkmKuVHxMnufDhT"],"license":"BUSL-1.1"},"test/helpers/eigenlayer/interfaces/IStrategyManager.sol":{"keccak256":"0x058ec8e8ded58d19f4ffece0c05daac83b91ab8c102ffa47bae7477f3c999aa6","urls":["bzz-raw://41c1e4fc0e62f292d0260b9c45cae1975f232458f2ea2fa84a1f239764aa9c06","dweb:/ipfs/QmPY2Z7Krecyv4u7XabWUg6Dhs9FeigMP6wceX9x5Rjx9s"],"license":"BUSL-1.1"}},"version":1},"id":112}